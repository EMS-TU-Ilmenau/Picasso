#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Copyright 2019 Christoph Wagner
#     https://www.tu-ilmenau.de/it-ems/
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
#  PURPOSE
#  =======
#  The purpose of Picasso is to modify images using a template or entering
#  modifications manually to make them more readable for example.
#
#  Requires: numpy, PIL
#
#  Author: Christoph Wagner, 04.01.2019, EMS Research Group TU Ilmenau
#  Coauthor: Johannes van Reimersdahl, 04.01.2019, EMS Research Group TU Ilmenau


if __name__ == '__main__':
    import argparse
    from EMSPicasso.EMSPicasso import Picasso

    parser = argparse.ArgumentParser(
                        description = "Picasso is a tool to modify images."
    )

    parser.add_argument("filename", type=str,
                        help = "filepath of the unmodified image"
    )

    parser.add_argument("-s", "--outputname", default = "None", type=str,
                        help = "Filename the modifed image is supposed to have. " +
                        "If you want to set a filename add : -s output.png " +
                        "Else the image will be named 'sourcefile_modified.ext'"
    )

    parser.add_argument("commands", nargs="+",
                        help = """Possible commands:\n -'invert'/'i'\n
                        - 'crop'\n -"""
                        "colors can be given in #rrggbb, #rgb or (r,g,b). " +
                        'Invert by writing: "invert" or "i". ' +
                        'How to give arguments: ["color1=color2" ' +
                        '"invert" "color3=color4"] ' +
                        'Pratical example: ["#000001=#FF0000" "invert"]'
    )

    parser.add_argument("-v", "--verbose", action = "store_true", default = False,
                        help = "Increase verbosity of text output."
    )

    args = parser.parse_args()

    if args.verbose:
        print("Sourcefile: " + args.filename)
        print("Destinationfile: " + args.outputname)
        print("List of commands: ")
        print(args.commands)

    Picasso(args.filename, args.outputname, args.commands, args.verbose)
